/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.rusape.rovercommunications;

import java.util.logging.Level;
import java.util.logging.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Primary;

import com.rusape.rovercommunications.model.TelemetryMessage;
import com.rusape.rovercommunications.pojo.MessageParser;
import com.rusape.rovercommunications.pojo.ValidationsUtils;
import com.rusape.rovercommunications.service.MarsRoverCommunicationsService;
import com.rusape.rovercommunications.service.impl.InitializationServiceImpl;
import com.rusape.rovercommunications.service.impl.IntializationMessageProcessor;
import com.rusape.rovercommunications.service.impl.TelemetryMessageProcessor;
import com.rusape.rovercommunications.service.impl.TelemetryServiceImpl;

@SpringBootApplication
public class RoverApplication implements CommandLineRunner {
	private static final Logger LOGGER = Logger.getLogger(RoverApplication.class.getName());
	@Autowired
	private MarsRoverCommunicationsService marsRoverCommunicationsService;
	@Autowired
	private ValidationsUtils validationsUtils;

	public static void main(String[] args) {
		SpringApplication.run(RoverApplication.class, args);
	}
	@Override
	public void run(String... args) throws Exception {
		try {
		int port = validationsUtils.validateIPandPort(args);
		if(!validationsUtils.validatePortLength(port)) {
			LOGGER.log(Level.INFO,"Expecting a 4 digit port number");
			return;
		}
		marsRoverCommunicationsService.connect(args[0], port);
		}catch(Exception e) {
			LOGGER.log(Level.INFO,"Failed to connect to server ");
		}
	}
}
